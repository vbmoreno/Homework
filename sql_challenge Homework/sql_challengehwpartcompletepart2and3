CREATE TABLE departments (
    dept_no VARCHAR(255)   NOT NULL,
    dept_name VARCHAR(255)   NOT NULL,
    CONSTRAINT pk_departments PRIMARY KEY (
        dept_no
     )
);

CREATE TABLE titles (
    title_id VARCHAR(255)   NOT NULL,
    title VARCHAR(255)   NOT NULL,
    CONSTRAINT pk_titles PRIMARY KEY (
        title_id
     )
);
	
CREATE TABLE employees (
    emp_no VARCHAR(255)   NOT NULL,
    emp_title_id VARCHAR(255)   NOT NULL,
    birth_date DATE   NOT NULL,
    first_name VARCHAR(255)   NOT NULL,
    last_name VARCHAR(255)   NOT NULL,
    sex VARCHAR(255)   NOT NULL,
    hire_date DATE   NOT NULL,
    CONSTRAINT pk_employees PRIMARY KEY (
        emp_no
     )
);

CREATE TABLE dept_manager (
    dept_no VARCHAR(255)   NOT NULL,
    emp_no VARCHAR(255)   NOT NULL
);

CREATE TABLE dept_employees (
    emp_no VARCHAR(255)   NOT NULL,
    dept_no VARCHAR(255)   NOT NULL
);

CREATE TABLE salaries (
    emp_no VARCHAR(255)   NOT NULL,
    salary INT   NOT NULL
);

ALTER TABLE dept_employees ADD CONSTRAINT fk_dept_employees_dept_no FOREIGN KEY (dept_no)
REFERENCES public.departments (dept_no);

ALTER TABLE employees ADD CONSTRAINT fk_employees_title_id FOREIGN KEY(emp_title_id)
REFERENCES public.titles (title_id);

ALTER TABLE dept_employees ADD CONSTRAINT fk_dept_employees_emp_no FOREIGN KEY (emp_no)
REFERENCES public.employees (emp_no);

ALTER TABLE dept_manager ADD CONSTRAINT fk_dept_manager_emp_no FOREIGN KEY(emp_no)
REFERENCES public.employees (emp_no);

ALTER TABLE dept_manager ADD CONSTRAINT fk_dept_manager_dept_no FOREIGN KEY(dept_no)
REFERENCES public.departments (dept_no);

ALTER TABLE salaries ADD CONSTRAINT fk_salaries_emp_no FOREIGN KEY(emp_no)
REFERENCES public.employees (emp_no);

--1. List the following details of each employee: employee number, last name, first name, sex, and salary.
SELECT employees.emp_no, employees.first_name, employees.last_name, employees.sex, salaries.salary
FROM employees
Inner Join Salaries ON
employees.emp_no = salaries.emp_no;

--2. List first name, last name, and hire date for employees who were hired in 1986.
SELECT employees.first_name, employees.last_name, employees.hire_date
FROM employees
WHERE hire_date BETWEEN '1986-01-01' AND '1986-12-31';

--3. List the manager of each department with the following information: department number, department name, the manager's employee number, last name, first name.
SELECT departments.dept_no, departments.dept_name, dept_manager.emp_no, employees.first_name, employees.last_name
FROM departments JOIN dept_manager on departments.dept_no = dept_manager.dept_no 
JOIN employees on dept_manager.emp_no = employees.emp_no;

--4. List the department of each employee with the following information: employee number, last name, first name, and department name.
SELECT employees.emp_no, employees.first_name, employees.last_name, dept_employees.emp_no
FROM employees
Inner Join dept_employees ON
employees.emp_no = dept_employees.emp_no;

--5. List first name, last name and sex for all people whose first name is Herculas but last name starts with B.
SELECT employees.first_name, employees.last_name, employees.sex
FROM employees
WHERE first_name = 'Hercules'
AND last_name LIKE 'B%';

--6. List all employees in the Sales department, including their employee number, last name, first name, and department name.
SELECT departments.dept_name, dept_employees.emp_no, employees.first_name, employees.last_name 
FROM dept_employees 
JOIN employees on dept_employees.emp_no = employees.emp_no 
JOIN departments on dept_employees.dept_no = departments.dept_no
WHERE departments.dept_name = 'Sales';

--7. List all employees in the Sales and Development departments, including their employee number, last name, first name, and department name.
SELECT departments.dept_name, dept_employees.emp_no, employees.first_name, employees.last_name 
FROM dept_employees 
JOIN employees on dept_employees.emp_no = employees.emp_no 
JOIN departments on dept_employees.dept_no = departments.dept_no
WHERE departments.dept_name = 'Sales' or departments.dept_name = 'Development';


--8. In descending order, list the frequency count of employee last names, i.e., how many employees share each last name.
SELECT employees.last_name, COUNT (last_name) AS "frequency"
FROM employees
GROUP BY last_name
ORDER BY 
Count (last_name) DESC;

